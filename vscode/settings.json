{
  "window.title": "${dirty}${activeEditorMedium}${separator}${rootName}",
  "workbench.editor.showTabs": true,
  "workbench.editor.wrapTabs": true,
  "workbench.editor.enablePreview": false,
  "workbench.tree.indent": 10,
  "workbench.colorTheme": "Default Light+",
  // https://code.visualstudio.com/api/references/theme-color
  "workbench.colorCustomizations": {
    "editor.selectionBackground": "#ffd700",
    "editorLineNumber.activeForeground": "#ff0000",

    "statusBar.background": "#B48EAD",
    "statusBar.noFolderBackground": "#B48EAD",
    "statusBar.debuggingBackground": "#B48EAD",
    "statusBar.foreground": "#434C5E",
    "statusBar.debuggingForeground": "#434C5E",

    // "tab.activeBackground": "#5EBA7D"
    "tab.activeBackground": "#80EA6F",
    "tab.activeForeground": "#000000",

    // https://stackoverflow.com/questions/36942037/vs-code-customize-file-explorer-window-color-theme
    // "list.activeSelectionBackground": "#6f83ab",
    "list.hoverBackground": "#cac8c8",
    "list.inactiveSelectionBackground": "#cac8c8",

    "tree.indentGuidesStroke": "#8fa31f"
  },

  // "editor.fontFamily": "'Fira Code','JetBrains Mono', Menlo, Monaco, 'Courier New', monospace",
  // "editor.fontSize": 12,
  // "editor.lineHeight": 20,
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.occurrencesHighlight": true,
  "editor.rulers": [80, 100, 120],
  "editor.renderLineHighlight": "line",
  "editor.renderWhitespace": "all",
  "editor.showFoldingControls": "always",
  "editor.suggestLineHeight": 24,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",

  "explorer.incrementalNaming": "smart",
  "explorer.compactFolders": false,

  "files.autoGuessEncoding": true,
  "files.eol": "\n",

  "search.showLineNumbers": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/tmp/cache": true
  },

  "debug.inlineValues": "on",
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.openDebug": "openOnSessionStart",
  "debug.toolBarLocation": "docked",

  "vim.easymotion": true,
  "vim.surround": true,
  "vim.replaceWithRegister": true,
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.searchHighlightColor": "#ffd700",
  "vim.showcmd": true,
  "vim.smartRelativeLine": false,
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vim.visualstar": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "rgba(255, 215, 0, 0.6)",
  "vim.highlightedyank.duration": 5000,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-h>"],
      "after": ["LEFT"]
    },
    {
      "before": ["<C-j>"],
      "after": ["DOWN"]
    },
    {
      "before": ["<C-l>"],
      "after": ["RIGHT"]
    },
    {
      "before": ["<C-k>"],
      "after": ["UP"]
    }
    // {
    //   "before": ["<C-a>"],
    //   "commands": ["cursorHome"]
    // },
    // {
    //   "before": ["<C-e>"],
    //   "commands": ["cursorEnd"]
    // }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>", "a", "c"],
      "commands": ["editor.action.insertCursorBelow"]
    },
    {
      "before": ["<space>", "f", "s"],
      // "commands": ["workbench.action.focusSideBar"]
      "commands": ["workbench.view.explorer"]
      // workbench.view.explorer
    },
    {
      "before": ["<space>", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<space>", "f", "g"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<space>", "1"],
      "after": ["g", "T"]
    },
    {
      "before": ["<space>", "2"],
      "after": ["g", "t"]
    },
    {
      "before": ["_"],
      "after": ["g", "r"]
    },
    {
      "before": ["<space>", "s", "b"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<space>", "s", "i"],
      "commands": ["workbench.files.action.showActiveFileInExplorer"]
    },
    {
      "before": ["<space>", "r", "f"],
      "commands": ["editor.action.refactor"]
    },
    {
      "before": ["<space>", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<space>", "o", "l"],
      "commands": ["outline.focus"]
    },
    {
      "before": ["<space>", "g", "r"],
      //"commands": ["editor.action.goToReferences"]
      "commands": ["editor.action.referenceSearch.trigger"]
    },
    {
      "before": ["<space>", "g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      "before": ["<space>", "g", "d"],
      "commands": ["editor.action.goToDeclaration"]
    },
    {
      "before": ["<space>", "q", "f"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<space>", "l", "l"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<space>", "g", "e"],
      "commands": ["editor.action.sourceAction"]
    },
    {
      "before": ["<space>", "s", "a"],
      "commands": ["editor.action.sourceAction"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["editor.action.wordHighlight.next"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["editor.action.wordHighlight.prev"]
    },
    {
      "before": ["<space>", "s", "h"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["[", "e"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "e"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<space>", "s", "c"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<space>", "o", "t"],
      "commands": ["workbench.action.showAllSymbols"]
    },
    {
      "before": ["<space>", "o", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<Leader>", "o", "l"],
      "commands": ["editor.action.openLink"]
    },
    {
      "before": ["<space>", "t", "t"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    {
      "before": ["<space>", "f", "t"],
      "commands": ["workbench.action.terminal.focus"]
    },
    {
      "before": ["<space>", "h", "t"],
      "commands": ["workbench.action.closePanel"]
    },
    {
      "before": ["<space>", "k", "t"],
      "commands": ["workbench.action.terminal.kill"]
    },
    {
      "before": ["<space>", "s", "r"],
      "commands": ["rest-client.request"]
    },
    {
      "before": ["<space>", "r", "c"],
      "commands": ["workbench.action.debug.run"]
    },
    {
      "before": ["<space>", "r", "d"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["<C-n>"],
      "after": ["g", "b"]
    },
    {
      "before": ["<leader>", "d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["<leader>", "D"],
      "after": ["\"", "_", "D"]
    },
    {
      "before": ["<leader>", "d", "d"],
      "after": ["\"", "_", "d", "d"]
    },
    {
      "before": ["<leader>", "x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["<leader>", "<leader>", "f"],
      "after": ["<leader>", "<leader>", "s"]
    },
    {
      "before": ["<leader>", "<leader>", "F"],
      "after": ["<leader>", "<leader>", "<leader>", "j"]
    },
    {
      "before": ["<leader>", "<leader>", "s"],
      "after": ["<leader>", "<leader>", "<leader>", "b", "d", "w"]
    },
    {
      "before": ["<leader>", "<leader>", "e"],
      "after": ["<leader>", "<leader>", "<leader>", "b", "d", "e"]
    },
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<leader>", "a", "w"],
      "commands": ["workbench.action.files.saveAll"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": [":q"]
    },
    {
      "before": ["<leader>", "Q"],
      "commands": [":q!"]
    },
    {
      "before": ["<leader>", "n", "f"],
      "commands": ["workbench.action.files.newUntitledFile"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.navigateBack"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.navigateForward"]
    },
    {
      "before": ["<CR>"],
      "commands": ["editor.action.smartSelect.expand"]
    },
    // {
    //   "before": ["<CR>"],
    //   "after": ["o", "Esc"]
    // },
    // {
    //   "before": ["<S-CR>"],
    //   "after": ["O", "Esc"]
    // },
    {
      "before": ["<BS>"],
      "commands": [":nohl"]
    },
    {
      "before": ["<C-a>"],
      "after": ["g", "g", "V", "G"]
    },
    {
      "before": ["space", "f", "m"],
      "commands": ["editor.action.formatDocument"]
      // "commands": ["editor.action.format"]
    },
    {
      "before": ["<leader>", "c", "b"],
      "commands": ["editor.action.blockComment"]
    },
    {
      "before": ["<leader>", "c", "c"],
      "commands": [
        //  "editor.action.addCommentLine",
        "editor.action.commentLine"
      ]
    },
    // {
    //   "before": ["<leader>", "c", "u"],
    //   "commands": ["editor.action.removeCommentLine"]
    // },
    {
      "before": ["<space>", "d", "c"],
      "commands": ["turboConsoleLog.deleteAllLogMessages"]
    },
    {
      "before": ["<space>", "c", "c"],
      "commands": ["turboConsoleLog.commentAllLogMessages"]
    }
    // {
    //   "before": ["∆"],
    //   "commands": ["editor.action.moveLinesDownAction"]
    // },
    // {
    //   "before": ["˚"],
    //   "commands": ["editor.action.moveLinesUpAction"]
    // },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // {
    //   "before": [">"],
    //   "after": [">", "g", "v"]
    // },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["<CR>"],
      "commands": ["editor.action.smartSelect.expand"]
    },
    {
      "before": ["<space>", "r", "f"],
      "commands": ["editor.action.refactor"]
    },
    {
      "before": ["<C-n>"],
      "after": ["g", "b"]
    },
    {
      "before": ["<leader>", "c", "b"],
      "commands": ["editor.action.blockComment"]
    },
    {
      "before": ["<leader>", "c", "c"],
      "commands": ["editor.action.commentLine"]
    }
    // {
    //   "before": ["<leader>", "c", "c"],
    //   "commands": ["editor.action.addCommentLine"]
    // },
    // {
    //   "before": ["<leader>", "c", "u"],
    //   "commands": ["editor.action.removeCommentLine"]
    // },
    // {
    //   "before": ["∆"],
    //   "commands": ["editor.action.moveLinesDownAction"]
    // },
    // {
    //   "before": ["˚"],
    //   "commands": ["editor.action.moveLinesUpAction"]
    // }
  ],
  "vim.leader": ",",
  "vim.handleKeys": {
    // "<C-a>": false,
    "<C-f>": true,
    "<C-w>": false
  },

  "settingsSync.keybindingsPerPlatform": false,

  "java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -javaagent:\"/Users/veg/.vscode/extensions/gabrielbb.vscode-lombok-1.0.1/server/lombok.jar\"",

  "redhat.telemetry.enabled": false,

  "security.workspace.trust.untrustedFiles": "open",

  "xml.codeLens.enabled": true,
  "xml.format.preserveAttributeLineBreaks": true,

  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  "emmet.showExpandedAbbreviation": "always",
  "emmet.showAbbreviationSuggestions": true,
  "emmet.excludeLanguages": ["markdown", "json"],
  "emmet.syntaxProfiles": {
    "html": {
      "inlineBreak": 2
    }
  },

  "git.autofetch": true,
  "git-graph.openNewTabEditorGroup": "Beside",

  "java.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterNames.enabled": "all",
  "java.configuration.updateBuildConfiguration": "automatic",
  "Lua.telemetry.enable": false,
  "liveServer.settings.donotShowInfoMsg": true,

  "prettier.printWidth": 120,

  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    // "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  // https://qiita.com/rubytomato@github/items/d4716c41a2d15c64f791#htmlformatindenthandlebars
  "html.format.indentInnerHtml": false,
  "html.format.extraLiners": "null",
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.tabSize": 2
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.tabSize": 2
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[python]": {
    "editor.formatOnType": true
  },
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  }
}

