let mapleader = ","
let g:mapleader = ","

set surround

set keep-english-in-normal-and-restore-in-insert

" 搜索配置
set hlsearch
set incsearch
set ignorecase
set smartcase

inoremap jk <esc>

nmap <silent> to o<Esc>
nmap <silent> tO O<Esc>

nnoremap <silent> <BS> :nohlsearch<CR>

inoremap <C-x> <BS>

inoremap <C-h> <LEFT>
inoremap <C-j> <DOWN>
inoremap <C-k> <UP>
inoremap <C-l> <RIGHT>
inoremap <C-a> <Home>
inoremap <C-e> <End>

if has('win32')
    nnoremap <A-j> :m .+1<CR>==
    nnoremap <A-k> :m .-2<CR>==
    inoremap <A-j> <Esc>:m .+1<CR>==gi
    inoremap <A-k> <Esc>:m .-2<CR>==gi
    vnoremap <A-j> :m '>+1<CR>gv=gv
    vnoremap <A-k> :m '<-2<CR>gv=gv
"elseif has('unix')
elseif has('mac')
    nnoremap ∆ :m .+1<CR>==
    nnoremap ˚ :m .-2<CR>==
    inoremap ∆ <Esc>:m .+1<CR>==gi
    inoremap ˚ <Esc>:m .-2<CR>==gi
    vnoremap ∆ :m '>+1<CR>gv=gv
    vnoremap ˚ :m '<-2<CR>gv=gv
endif

noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>P "0p
set clipboard+=unnamed

set number relativenumber

nnoremap <leader>zh :action RecentChangedFiles<CR>
nnoremap <leader>zp :action ActivateProjectToolWindow<CR>
noremap <leader>ha :action HideAllWindows<CR>

" idea自带的搜索配置
nnoremap <leader>/ :action Find<CR>

" 标签页配置
nnoremap gn gt
nnoremap gp gT
nnoremap <leader>qq :q<CR>
nnoremap <leader>qa :action CloseAllEditors<CR>

" 跳转配置
nnoremap gs :action GotoSuperMethod<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gj :action GotoNextError<CR>
nnoremap gk :action GotoPreviousError<CR>
nnoremap gh :action Back<CR>
nnoremap gl :action Forward<CR>

" 显示类信息
nnoremap gf :action FiletructurePopup<CR>

" 重命名
nnoremap gr :action RenameElement<CR>

" 代码相关
nnoremap <Leader>su :action ShowUsages<CR>
nnoremap <Leader>se :action ShowErrorDescription<CR>
nnoremap == :action ReformatCode<CR>
nnoremap <Leader>rc :action Run<CR>
nnoremap <Leader>rm :action RunClass<CR>
nnoremap <Leader>cc :action CommentByLineComment<CR>
vnoremap <Leader>cc :action CommentByBlockComment<CR>
nnoremap <Leader>nc :action NewClass<CR>
nnoremap <leader>ge :action Generate<CR>
vnoremap <Leader>em :action ExtractMethod<CR>
nnoremap <leader>om :action OverrideMethods<CR>
nnoremap <leader>im :action ImplementMethods<CR>
nnoremap <Leader>th :action TypeHierarchy<CR>
